% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KrausFun.R
\name{reconstructKraus}
\alias{reconstructKraus}
\title{Reconstruct functional data as proposed by Kraus (JRSSB, 2015)}
\usage{
reconstructKraus(X_mat, alpha = NULL, reconst_fcts = NULL)
}
\arguments{
\item{X_mat}{pxn matrix (p: number of discretization points, n=number of functions}

\item{alpha}{Ridge parameter. If alpha = NULL (default), an optimal alpha is determined by GCV}

\item{reconst_fcts}{A vector specifying the list elements in Ly which need to be reconstructed. Default (reconst_fcts=NULL) will reconstruct all functions.}
}
\description{
This function allows to reconstruct partially observed functional data as proposed in: 
Kraus, D. (2015). Components and completion of partially observed functional data. 
Journal of the Royal Statistical Society: Series B (Statistical Methodology), 77(4), 777-801.
}
\examples{
 
a <- 0; b <- 1; n <- 100
SimDat <- simuldataKraus(n = n, a = a, b = b)
## 
Y_mat       <- SimDat[['Y_mat']]
U_mat       <- SimDat[['U_mat']]
U_true_mat  <- SimDat[['U_true_mat']]
##
result        <- reconstructKraus(X_mat = Y_mat)
Y_reconst_mat <- result[['X_reconst_mat']]
##
par(mfrow=c(2,1))
matplot(x=U_mat[,1:5], y=Y_mat[,1:5], col=gray(.5), type="l", 
main="Original Data", ylab="", xlab="")
matplot(x=U_true_mat[,1:5], y=Y_reconst_mat[,1:5], col=gray(.5), 
type="l", main="Kraus (2015)", ylab="", xlab="")
par(mfrow=c(1,1))
}
