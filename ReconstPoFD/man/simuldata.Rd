% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimulFun.R
\name{simuldata}
\alias{simuldata}
\title{Simulate Data}
\usage{
simuldata(n = 100, m = 15, a = 0, b = 1, DGP = c("DGP1", "DGP2",
  "DGP3", "DGP4", "DGP5")[1], nRegGrid = 51, determ_obs_interv = NULL)
}
\arguments{
\item{n}{Number of functions}

\item{m}{Number of discretization points}

\item{a}{Lower interval boundary}

\item{b}{Upper interval boundary}

\item{DGP}{Data Generating Process. DGP1: Gaussian scores. DGP2: Exponential scores.}

\item{nRegGrid}{Number of grid-points used for the equidistant 'workGrid'.}

\item{determ_obs_interv}{Set a deterministic interval for the observed part. Default (determ_obs_interv = NULL) means random intervals.}
}
\description{
This function allows to simulate partially observed functional data.
}
\examples{
 
DGP=c('DGP1','DGP2','DGP3','DGP4','DGP5')[3]
SimDat        <- simuldata(n = 50, m = 15, a = 0, b = 1, DGP=DGP)
Y_mat         <- SimDat[['Y_mat']]
U_mat         <- SimDat[['U_mat']]
Y_true_mat    <- SimDat[['Y_true_mat']]
U_true_mat    <- SimDat[['U_true_mat']]
mean_true_vec <- SimDat[['mean_true_vec']]
##
par(mfrow=c(2,1))
matplot(x=U_mat[,1:5],      y=Y_mat[,1:5], col=gray(.5), type="l", 
main=ifelse(any(DGP==c("DGP1","DGP2")), "Missings", "Missings"))
lines(  x=U_true_mat[,1],   y=mean_true_vec, col="red")
matplot(x=U_true_mat[,1:5], y=Y_true_mat[,1:5], col=gray(.5), type="l", 
main=ifelse(any(DGP==c("DGP1","DGP2")), "No Missings & No Noise", "No Missings"))
lines(  x=U_true_mat[,1],   y=mean_true_vec, col="red")
par(mfrow=c(1,1))
}
