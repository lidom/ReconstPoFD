% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SimulFun.R
\name{simuldataWBF}
\alias{simuldataWBF}
\title{Simulate Data without Basis Functions}
\usage{
simuldataWBF(n = 100, a = 0, b = 1, DGP = c("DGP5"), nRegGrid = 51,
  determ_obs_interv = NULL)
}
\arguments{
\item{n}{Number of functions}

\item{a}{Lower interval boundary}

\item{b}{Upper interval boundary}

\item{DGP}{Data Generating Process. DGP3: The DGP of Kraus. DGP4: Similar to the DGP of Kraus, but with a mean function and slower decaying eigenvalues.}

\item{nRegGrid}{Number of grid-points used for the equidistant 'workGrid'.}

\item{determ_obs_interv}{Set a deterministic interval for the observed part. Default (determ_obs_interv = NULL) means random intervals.}
}
\description{
This function allows to simulate functional data without using the typical global basis functions.
}
\examples{
 
a <- 0; b <- 1; n <- 100; DGP <- c('DGP5')
##
mean_fun <- function(u){return( 3*((u-a)/(b-a))^2 + 3*cos(3*pi*((u-a)/(b-a)) ))}
##
SimDat   <- simuldataWBF(n = n, a = a, b = b, DGP = DGP)
## 
Y_mat       <- SimDat[['Y_mat']]
U_mat       <- SimDat[['U_mat']]
Y_true_mat  <- SimDat[['Y_true_mat']]
U_true_mat  <- SimDat[['U_true_mat']]
##
par(mfrow=c(2,1))
matplot(x=U_mat[,1:5], y=Y_mat[,1:5], col=gray(.5), type="l", 
main="Missings & Noise", xlim=c(a,b))
lines(x=U_true_mat[,1], y=mean_fun(U_true_mat[,1]), col="red")
matplot(x=U_true_mat[,1:5], y=Y_true_mat[,1:5], col=gray(.5), type="l", 
main="NoMissings & NoNoise", xlim=c(a,b))
lines(x=U_true_mat[,1], y=mean_fun(U_true_mat[,1]), col="red")
par(mfrow=c(1,1))
}
